(()=>{"use strict";const e=async function(e){const t="http://api.weatherapi.com/v1/current.json?key=1bf8f4b95ad14cf186b162118230606&q="+e+"&aqi=no";try{const n=await fetch(t,{mode:"cors"});if(!n.ok)throw new Error(`City ${e} not found`);return function(e){const{current:{feelslike_c:t,temp_c:n,wind_mph:i,humidity:c},location:{name:r}}=e;return{cityName:r,temperature:n,feelsLike:t,windSpeed:i,humidity:c}}(await n.json())}catch(e){return alert(e),null}},t=function(e){if(!e)return;document.getElementById("weatherResult").classList.add("active");const t=document.getElementById("cityName"),n=document.getElementById("temperature"),i=document.getElementById("feelsLike"),c=document.getElementById("humidity"),r=document.getElementById("wind");t.textContent=`${e.cityName}`,n.textContent=`Temperature ${e.temperature} °C`,i.textContent=`Feels like: ${e.feelsLike} °C`,c.textContent=`Humidity: ${e.humidity} %`,r.textContent=`Wind: ${e.windSpeed} m/h`},n=function(){document.getElementById("weatherResult").classList.remove("active")},i=document.getElementById("searchForm"),c=document.querySelector('input[type="text"]'),r=document.getElementById("searchBtn");i.addEventListener("submit",(e=>{e.preventDefault()})),r.addEventListener("click",(async()=>{if(""===c.value)return;const i=await e(c.value);t(i),c.value="",c.addEventListener("click",(()=>{i&&n()}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsTUFzQkEsRUFmSUEsZUFBeUJDLEdBQ3ZCLE1BQU1DLEVBQVcsbUZBQW9GRCxFQUFNLFVBQzNHLElBQ0UsTUFBTUUsUUFBaUJDLE1BQU1GLEVBQVUsQ0FBRUcsS0FBTSxTQUMvQyxJQUFLRixFQUFTRyxHQUFJLE1BQU0sSUFBSUMsTUFBTSxRQUFRTixlQUUxQyxPQVpKLFNBQXFCTyxHQUNuQixNQUFPQyxTQUFVQyxZQUFhQyxFQUFXQyxPQUFPQyxFQUFhQyxTQUFVQyxFQUFXQyxTQUFVQSxHQUM1RkMsVUFBV0MsS0FBTUMsSUFBYVgsRUFDOUIsTUFBTyxDQUFDVyxXQUFVTixjQUFhRixZQUFXSSxZQUFXQyxXQUN2RCxDQU9pQkksT0FBa0JqQixFQUFTa0IsT0FFMUMsQ0FBRSxNQUFPQyxHQUVQLE9BREFDLE1BQU1ELEdBQ0MsSUFDVCxDQUNGLEVDVUosRUEzQkksU0FBMEJFLEdBQ3hCLElBQUtBLEVBQWEsT0FFSUMsU0FBU0MsZUFBZSxpQkFDaENDLFVBQVVDLElBQUksVUFFNUIsTUFBTVQsRUFBV00sU0FBU0MsZUFBZSxZQUNuQ2IsRUFBY1ksU0FBU0MsZUFBZSxlQUN0Q2YsRUFBWWMsU0FBU0MsZUFBZSxhQUNwQ1YsRUFBV1MsU0FBU0MsZUFBZSxZQUNuQ0csRUFBT0osU0FBU0MsZUFBZSxRQUVyQ1AsRUFBU1csWUFBYyxHQUFHTixFQUFZTCxXQUN0Q04sRUFBWWlCLFlBQWMsZUFBZU4sRUFBWVgsaUJBQ3JERixFQUFVbUIsWUFBYyxlQUFlTixFQUFZYixlQUNuREssRUFBU2MsWUFBYyxhQUFhTixFQUFZUixhQUNoRGEsRUFBS0MsWUFBYyxTQUFTTixFQUFZVCxlQUMxQyxFQVVKLEVBUkksV0FDd0JVLFNBQVNDLGVBQWUsaUJBQ2hDQyxVQUFVSSxPQUFPLFNBQ2pDLEVDbkJFQyxFQUFhUCxTQUFTQyxlQUFlLGNBQ3JDTyxFQUFjUixTQUFTUyxjQUFjLHNCQUNyQ0MsRUFBWVYsU0FBU0MsZUFBZSxhQUUxQ00sRUFBV0ksaUJBQWlCLFVBQVdDLElBQ25DQSxFQUFFQyxnQkFBZ0IsSUFJdEJILEVBQVVDLGlCQUFpQixTQUFTcEMsVUFDaEMsR0FBMEIsS0FBdEJpQyxFQUFZTSxNQUFjLE9BQzlCLE1BQU1mLFFBQW9CLEVBQWtCUyxFQUFZTSxPQUN4RCxFQUFzQmYsR0FDdEJTLEVBQVlNLE1BQVEsR0FDcEJOLEVBQVlHLGlCQUFpQixTQUFTLEtBQ2pDWixHQUNELEdBQ0YsR0FDRCxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2VhdGhlcmFwcC8uL3NyYy9tb2R1bGVzL3dlYXRoZXIuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlcmFwcC8uL3NyYy9tb2R1bGVzL3ZpZXdyZXN1bHQuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlcmFwcC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB3ZWF0aGVyID0gKCgpID0+IHtcbiAgICBmdW5jdGlvbiBwcm9jZXNzRGF0YShkYXRhKSB7XG4gICAgICBjb25zdCB7Y3VycmVudDoge2ZlZWxzbGlrZV9jOiBmZWVsc0xpa2UsIHRlbXBfYzp0ZW1wZXJhdHVyZSwgd2luZF9tcGg6IHdpbmRTcGVlZCwgaHVtaWRpdHk6IGh1bWlkaXR5fSwgXG4gICAgICBsb2NhdGlvbjoge25hbWU6IGNpdHlOYW1lfX0gPSBkYXRhO1xuICAgICAgcmV0dXJuIHtjaXR5TmFtZSwgdGVtcGVyYXR1cmUsIGZlZWxzTGlrZSwgd2luZFNwZWVkLCBodW1pZGl0eX07XG4gICAgfVxuICBcbiAgICBhc3luYyBmdW5jdGlvbiBmZXRjaERhdGEoY2l0eSkge1xuICAgICAgY29uc3QgZW5kcG9pbnQgPSAnaHR0cDovL2FwaS53ZWF0aGVyYXBpLmNvbS92MS9jdXJyZW50Lmpzb24/a2V5PTFiZjhmNGI5NWFkMTRjZjE4NmIxNjIxMTgyMzA2MDYmcT0nKyBjaXR5ICsnJmFxaT1ubydcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goZW5kcG9pbnQsIHsgbW9kZTogXCJjb3JzXCIgfSk7XG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHRocm93IG5ldyBFcnJvcihgQ2l0eSAke2NpdHl9IG5vdCBmb3VuZGApO1xuICAgICAgICBjb25zdCBkYXRhID0gcHJvY2Vzc0RhdGEoYXdhaXQgcmVzcG9uc2UuanNvbigpKTtcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBhbGVydChlcnJvcilcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7IGZldGNoRGF0YSB9O1xuICB9KSgpO1xuXG5leHBvcnQgZGVmYXVsdCB3ZWF0aGVyO1xuXG4iLCJjb25zdCB2aWV3ID0gKCgpID0+IHtcbiAgICBmdW5jdGlvbiBzZXRXZWF0aGVyUmVzdWx0KHdlYXRoZXJEYXRhKSB7XG4gICAgICBpZiAoIXdlYXRoZXJEYXRhKSByZXR1cm47XG4gIFxuICAgICAgY29uc3Qgd2VhdGhlclJlc3VsdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid2VhdGhlclJlc3VsdFwiKTtcbiAgICAgIHdlYXRoZXJSZXN1bHQuY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcbiAgXG4gICAgICBjb25zdCBjaXR5TmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2l0eU5hbWVcIik7XG4gICAgICBjb25zdCB0ZW1wZXJhdHVyZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGVtcGVyYXR1cmVcIik7XG4gICAgICBjb25zdCBmZWVsc0xpa2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZlZWxzTGlrZVwiKTtcbiAgICAgIGNvbnN0IGh1bWlkaXR5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJodW1pZGl0eVwiKTtcbiAgICAgIGNvbnN0IHdpbmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndpbmRcIik7XG4gIFxuICAgICAgY2l0eU5hbWUudGV4dENvbnRlbnQgPSBgJHt3ZWF0aGVyRGF0YS5jaXR5TmFtZX1gO1xuICAgICAgdGVtcGVyYXR1cmUudGV4dENvbnRlbnQgPSBgVGVtcGVyYXR1cmUgJHt3ZWF0aGVyRGF0YS50ZW1wZXJhdHVyZX0gwrBDYDtcbiAgICAgIGZlZWxzTGlrZS50ZXh0Q29udGVudCA9IGBGZWVscyBsaWtlOiAke3dlYXRoZXJEYXRhLmZlZWxzTGlrZX0gwrBDYDtcbiAgICAgIGh1bWlkaXR5LnRleHRDb250ZW50ID0gYEh1bWlkaXR5OiAke3dlYXRoZXJEYXRhLmh1bWlkaXR5fSAlYDtcbiAgICAgIHdpbmQudGV4dENvbnRlbnQgPSBgV2luZDogJHt3ZWF0aGVyRGF0YS53aW5kU3BlZWR9IG0vaGA7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2xlYXJXZWF0aGVyUmVzdWx0KCl7XG4gICAgICBjb25zdCB3ZWF0aGVyUmVzdWx0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dlYXRoZXJSZXN1bHQnKVxuICAgICAgd2VhdGhlclJlc3VsdC5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKVxuICAgIH1cbiAgXG4gICAgcmV0dXJuIHsgc2V0V2VhdGhlclJlc3VsdCwgY2xlYXJXZWF0aGVyUmVzdWx0IH07XG4gIH0pKCk7XG4gIFxuZXhwb3J0IGRlZmF1bHQgdmlldztcbiIsImltcG9ydCB3ZWF0aGVyIGZyb20gXCIuL21vZHVsZXMvd2VhdGhlclwiO1xuaW1wb3J0IHZpZXcgZnJvbSBcIi4vbW9kdWxlcy92aWV3cmVzdWx0XCI7XG5cblxuY29uc3Qgc2VhcmNoRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzZWFyY2hGb3JtJylcbmNvbnN0IHNlYXJjaElucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXRbdHlwZT1cInRleHRcIl0nKTtcbmNvbnN0IHNlYXJjaEJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzZWFyY2hCdG4nKTtcblxuc2VhcmNoRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICB9KTtcblxuXG5zZWFyY2hCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGFzeW5jICgpID0+IHtcbiAgICBpZiAoc2VhcmNoSW5wdXQudmFsdWUgPT09IFwiXCIpIHJldHVybjtcbiAgICBjb25zdCB3ZWF0aGVyRGF0YSA9IGF3YWl0IHdlYXRoZXIuZmV0Y2hEYXRhKHNlYXJjaElucHV0LnZhbHVlKTtcbiAgICB2aWV3LnNldFdlYXRoZXJSZXN1bHQod2VhdGhlckRhdGEpO1xuICAgIHNlYXJjaElucHV0LnZhbHVlID0gXCJcIjtcbiAgICBzZWFyY2hJbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCk9PntcbiAgICAgIGlmKHdlYXRoZXJEYXRhKXtcbiAgICAgICAgdmlldy5jbGVhcldlYXRoZXJSZXN1bHQoKVxuICAgICAgfVxuICAgIH0pXG4gIH0pOyJdLCJuYW1lcyI6WyJhc3luYyIsImNpdHkiLCJlbmRwb2ludCIsInJlc3BvbnNlIiwiZmV0Y2giLCJtb2RlIiwib2siLCJFcnJvciIsImRhdGEiLCJjdXJyZW50IiwiZmVlbHNsaWtlX2MiLCJmZWVsc0xpa2UiLCJ0ZW1wX2MiLCJ0ZW1wZXJhdHVyZSIsIndpbmRfbXBoIiwid2luZFNwZWVkIiwiaHVtaWRpdHkiLCJsb2NhdGlvbiIsIm5hbWUiLCJjaXR5TmFtZSIsInByb2Nlc3NEYXRhIiwianNvbiIsImVycm9yIiwiYWxlcnQiLCJ3ZWF0aGVyRGF0YSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJjbGFzc0xpc3QiLCJhZGQiLCJ3aW5kIiwidGV4dENvbnRlbnQiLCJyZW1vdmUiLCJzZWFyY2hGb3JtIiwic2VhcmNoSW5wdXQiLCJxdWVyeVNlbGVjdG9yIiwic2VhcmNoQnRuIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==