(()=>{"use strict";const e=async function(e){const t="http://api.weatherapi.com/v1/current.json?key=1bf8f4b95ad14cf186b162118230606&q="+e+"&aqi=no";try{const n=await fetch(t,{mode:"cors"});if(!n.ok)throw new Error(`City ${e} not found`);return function(e){const{current:{feelslike_c:t,temp_c:n,wind_mph:i,humidity:c},location:{name:r}}=e;return{cityName:r,temperature:n,feelsLike:t,windSpeed:i,humidity:c}}(await n.json())}catch(e){return alert(e),null}},t=function(e){if(!e)return;document.getElementById("weatherResult").classList.add("active");const t=document.getElementById("cityName"),n=document.getElementById("temperature"),i=document.getElementById("feelsLike"),c=document.getElementById("humidity"),r=document.getElementById("wind");t.textContent=`${e.cityName}`,n.textContent=`Temperature ${e.temperature} °C`,i.textContent=`Feels like: ${e.feelsLike} °C`,c.textContent=`Humidity: ${e.humidity} %`,r.textContent=`Wind: ${e.windSpeed} m/h`},n=function(){document.getElementById("weatherResult").classList.remove("active")},i=document.getElementById("searchForm"),c=document.querySelector('input[type="text"]'),r=document.getElementById("searchBtn");i.addEventListener("submit",(e=>{e.preventDefault()})),r.addEventListener("click",(async()=>{if(""===c.value)return;const i=await e(c.value);t(i),c.value="",c.addEventListener("click",(()=>{i&&n()}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsTUFzQkEsRUFmSUEsZUFBeUJDLEdBQ3ZCLE1BQU1DLEVBQVcsbUZBQW9GRCxFQUFNLFVBQzNHLElBQ0UsTUFBTUUsUUFBaUJDLE1BQU1GLEVBQVUsQ0FBRUcsS0FBTSxTQUMvQyxJQUFLRixFQUFTRyxHQUFJLE1BQU0sSUFBSUMsTUFBTSxRQUFRTixlQUUxQyxPQVpKLFNBQXFCTyxHQUNuQixNQUFPQyxTQUFVQyxZQUFhQyxFQUFXQyxPQUFPQyxFQUFhQyxTQUFVQyxFQUFXQyxTQUFVQSxHQUM1RkMsVUFBV0MsS0FBTUMsSUFBYVgsRUFDOUIsTUFBTyxDQUFDVyxXQUFVTixjQUFhRixZQUFXSSxZQUFXQyxXQUN2RCxDQU9pQkksT0FBa0JqQixFQUFTa0IsT0FFMUMsQ0FBRSxNQUFPQyxHQUVQLE9BREFDLE1BQU1ELEdBQ0MsSUFDVCxDQUNGLEVDVUosRUEzQkksU0FBMEJFLEdBQ3hCLElBQUtBLEVBQWEsT0FFSUMsU0FBU0MsZUFBZSxpQkFDaENDLFVBQVVDLElBQUksVUFFNUIsTUFBTVQsRUFBV00sU0FBU0MsZUFBZSxZQUNuQ2IsRUFBY1ksU0FBU0MsZUFBZSxlQUN0Q2YsRUFBWWMsU0FBU0MsZUFBZSxhQUNwQ1YsRUFBV1MsU0FBU0MsZUFBZSxZQUNuQ0csRUFBT0osU0FBU0MsZUFBZSxRQUVyQ1AsRUFBU1csWUFBYyxHQUFHTixFQUFZTCxXQUN0Q04sRUFBWWlCLFlBQWMsZUFBZU4sRUFBWVgsaUJBQ3JERixFQUFVbUIsWUFBYyxlQUFlTixFQUFZYixlQUNuREssRUFBU2MsWUFBYyxhQUFhTixFQUFZUixhQUNoRGEsRUFBS0MsWUFBYyxTQUFTTixFQUFZVCxlQUMxQyxFQVVKLEVBUkksV0FDd0JVLFNBQVNDLGVBQWUsaUJBQ2hDQyxVQUFVSSxPQUFPLFNBQ2pDLEVDbkJFQyxFQUFhUCxTQUFTQyxlQUFlLGNBQ3JDTyxFQUFjUixTQUFTUyxjQUFjLHNCQUNyQ0MsRUFBWVYsU0FBU0MsZUFBZSxhQUUxQ00sRUFBV0ksaUJBQWlCLFVBQVdDLElBQ25DQSxFQUFFQyxnQkFBZ0IsSUFJdEJILEVBQVVDLGlCQUFpQixTQUFTcEMsVUFDaEMsR0FBMEIsS0FBdEJpQyxFQUFZTSxNQUFjLE9BQzlCLE1BQU1mLFFBQW9CLEVBQWtCUyxFQUFZTSxPQUN4RCxFQUFzQmYsR0FDdEJTLEVBQVlNLE1BQVEsR0FDcEJOLEVBQVlHLGlCQUFpQixTQUFTLEtBQ2pDWixHQUNELEdBQ0YsR0FDRCxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2VhdGhlcmFwcC8uL3NyYy9tb2R1bGVzL3dlYXRoZXIuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlcmFwcC8uL3NyYy9tb2R1bGVzL3ZpZXdyZXN1bHQuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlcmFwcC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB3ZWF0aGVyID0gKCgpID0+IHtcbiAgICBmdW5jdGlvbiBwcm9jZXNzRGF0YShkYXRhKSB7XG4gICAgICBjb25zdCB7Y3VycmVudDoge2ZlZWxzbGlrZV9jOiBmZWVsc0xpa2UsIHRlbXBfYzp0ZW1wZXJhdHVyZSwgd2luZF9tcGg6IHdpbmRTcGVlZCwgaHVtaWRpdHk6IGh1bWlkaXR5fSwgXG4gICAgICBsb2NhdGlvbjoge25hbWU6IGNpdHlOYW1lfX0gPSBkYXRhO1xuICAgICAgcmV0dXJuIHtjaXR5TmFtZSwgdGVtcGVyYXR1cmUsIGZlZWxzTGlrZSwgd2luZFNwZWVkLCBodW1pZGl0eX07XG4gICAgfVxuICBcbiAgICBhc3luYyBmdW5jdGlvbiBmZXRjaERhdGEoY2l0eSkge1xuICAgICAgY29uc3QgZW5kcG9pbnQgPSAnaHR0cDovL2FwaS53ZWF0aGVyYXBpLmNvbS92MS9jdXJyZW50Lmpzb24/a2V5PTFiZjhmNGI5NWFkMTRjZjE4NmIxNjIxMTgyMzA2MDYmcT0nKyBjaXR5ICsnJmFxaT1ubydcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goZW5kcG9pbnQsIHsgbW9kZTogXCJjb3JzXCIgfSk7XG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHRocm93IG5ldyBFcnJvcihgQ2l0eSAke2NpdHl9IG5vdCBmb3VuZGApO1xuICAgICAgICBjb25zdCBkYXRhID0gcHJvY2Vzc0RhdGEoYXdhaXQgcmVzcG9uc2UuanNvbigpKTtcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBhbGVydChlcnJvcilcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7IGZldGNoRGF0YSB9O1xuICB9KSgpO1xuXG5leHBvcnQgZGVmYXVsdCB3ZWF0aGVyOyIsImNvbnN0IHZpZXcgPSAoKCkgPT4ge1xuICAgIGZ1bmN0aW9uIHNldFdlYXRoZXJSZXN1bHQod2VhdGhlckRhdGEpIHtcbiAgICAgIGlmICghd2VhdGhlckRhdGEpIHJldHVybjtcbiAgXG4gICAgICBjb25zdCB3ZWF0aGVyUmVzdWx0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3ZWF0aGVyUmVzdWx0XCIpO1xuICAgICAgd2VhdGhlclJlc3VsdC5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xuICBcbiAgICAgIGNvbnN0IGNpdHlOYW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaXR5TmFtZVwiKTtcbiAgICAgIGNvbnN0IHRlbXBlcmF0dXJlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0ZW1wZXJhdHVyZVwiKTtcbiAgICAgIGNvbnN0IGZlZWxzTGlrZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmVlbHNMaWtlXCIpO1xuICAgICAgY29uc3QgaHVtaWRpdHkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImh1bWlkaXR5XCIpO1xuICAgICAgY29uc3Qgd2luZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid2luZFwiKTtcbiAgXG4gICAgICBjaXR5TmFtZS50ZXh0Q29udGVudCA9IGAke3dlYXRoZXJEYXRhLmNpdHlOYW1lfWA7XG4gICAgICB0ZW1wZXJhdHVyZS50ZXh0Q29udGVudCA9IGBUZW1wZXJhdHVyZSAke3dlYXRoZXJEYXRhLnRlbXBlcmF0dXJlfSDCsENgO1xuICAgICAgZmVlbHNMaWtlLnRleHRDb250ZW50ID0gYEZlZWxzIGxpa2U6ICR7d2VhdGhlckRhdGEuZmVlbHNMaWtlfSDCsENgO1xuICAgICAgaHVtaWRpdHkudGV4dENvbnRlbnQgPSBgSHVtaWRpdHk6ICR7d2VhdGhlckRhdGEuaHVtaWRpdHl9ICVgO1xuICAgICAgd2luZC50ZXh0Q29udGVudCA9IGBXaW5kOiAke3dlYXRoZXJEYXRhLndpbmRTcGVlZH0gbS9oYDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjbGVhcldlYXRoZXJSZXN1bHQoKXtcbiAgICAgIGNvbnN0IHdlYXRoZXJSZXN1bHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd2VhdGhlclJlc3VsdCcpXG4gICAgICB3ZWF0aGVyUmVzdWx0LmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpXG4gICAgfVxuICBcbiAgICByZXR1cm4geyBzZXRXZWF0aGVyUmVzdWx0LCBjbGVhcldlYXRoZXJSZXN1bHQgfTtcbiAgfSkoKTtcbiAgXG5leHBvcnQgZGVmYXVsdCB2aWV3O1xuIiwiaW1wb3J0IHdlYXRoZXIgZnJvbSBcIi4vbW9kdWxlcy93ZWF0aGVyXCI7XG5pbXBvcnQgdmlldyBmcm9tIFwiLi9tb2R1bGVzL3ZpZXdyZXN1bHRcIjtcblxuXG5jb25zdCBzZWFyY2hGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlYXJjaEZvcm0nKVxuY29uc3Qgc2VhcmNoSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFt0eXBlPVwidGV4dFwiXScpO1xuY29uc3Qgc2VhcmNoQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlYXJjaEJ0bicpO1xuXG5zZWFyY2hGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIH0pO1xuXG5cbnNlYXJjaEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGlmIChzZWFyY2hJbnB1dC52YWx1ZSA9PT0gXCJcIikgcmV0dXJuO1xuICAgIGNvbnN0IHdlYXRoZXJEYXRhID0gYXdhaXQgd2VhdGhlci5mZXRjaERhdGEoc2VhcmNoSW5wdXQudmFsdWUpO1xuICAgIHZpZXcuc2V0V2VhdGhlclJlc3VsdCh3ZWF0aGVyRGF0YSk7XG4gICAgc2VhcmNoSW5wdXQudmFsdWUgPSBcIlwiO1xuICAgIHNlYXJjaElucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKT0+e1xuICAgICAgaWYod2VhdGhlckRhdGEpe1xuICAgICAgICB2aWV3LmNsZWFyV2VhdGhlclJlc3VsdCgpXG4gICAgICB9XG4gICAgfSlcbiAgfSk7Il0sIm5hbWVzIjpbImFzeW5jIiwiY2l0eSIsImVuZHBvaW50IiwicmVzcG9uc2UiLCJmZXRjaCIsIm1vZGUiLCJvayIsIkVycm9yIiwiZGF0YSIsImN1cnJlbnQiLCJmZWVsc2xpa2VfYyIsImZlZWxzTGlrZSIsInRlbXBfYyIsInRlbXBlcmF0dXJlIiwid2luZF9tcGgiLCJ3aW5kU3BlZWQiLCJodW1pZGl0eSIsImxvY2F0aW9uIiwibmFtZSIsImNpdHlOYW1lIiwicHJvY2Vzc0RhdGEiLCJqc29uIiwiZXJyb3IiLCJhbGVydCIsIndlYXRoZXJEYXRhIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImNsYXNzTGlzdCIsImFkZCIsIndpbmQiLCJ0ZXh0Q29udGVudCIsInJlbW92ZSIsInNlYXJjaEZvcm0iLCJzZWFyY2hJbnB1dCIsInF1ZXJ5U2VsZWN0b3IiLCJzZWFyY2hCdG4iLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInByZXZlbnREZWZhdWx0IiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9